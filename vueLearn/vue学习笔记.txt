一.Vue过渡与动画
    1.Vue在插入、更新或者移除DOM时，提供多种不同方式的应用过渡效果
    2.Vue提供了内置的过渡封装组件，该组件用于包裹要实现过渡效果的组件
    淡入淡出：
    进入：v-enter(opacity:0,开始状态)---->v-enter-to(opacity:1，结束状态)
    离开：v-leave(opacity:1,开始状态)---->v-leave-to(opacity:0，结束状态)
    钩子函数：
    1.可以结合CSS transitions/animations 使用，也可以单独使用
    2.当只用js过渡是时，enter和leave中必需使用done进行回调，
        否则，他们将被同步调用，过渡会立即完成
        <transition 
            v-on:before-enter="beforenter"
            v-on:enter="enter"
            v-on:leave="leave"
            v-bind:css="false"
        >
        </transition>
        enter:function(el,done){

        },
        leave:function(el,done){

            {complete:done}
        }
    3.初始渲染过渡
        appear，用法同enter和leave
    4.给在<transition>组件中的元素设置key
    5.组件的过渡
        使用动态组件  :is
        <transition>
            <component>...
        </transition>
    6.列表过渡,同时渲染整个列表
        <transition-group name="list" tag="p">
            <span v-for="item in items" :key="item">{{item}}</span>
        </transition-group>
    7.可复用的过渡
        将子组件放进<transition>中
    8.动态过渡
        过渡也是数据驱动的
        <transition :name="name">
        </transition>
    9.状态过渡，用的不多
二、钩子函数和生命周期
    1.钩子函数
        事件劫持机制
        他会比定义的事件更早执行，可配置
        beforeCreate  el=undefined data=undefined
        created  el=undefined data=有数据
        beforeMount  el=undefined data=有数据
        mounted  el=有数据 data=有数据
        beforeUpdate data数据更新完成前
        updated data数据更新完成
        brforeDestroy  销毁前
        destroyed  已销毁

        数据请求一般写在created
        第三方库(jQuery)的使用一般在mounted
        ？？？？钩子函数不能写箭头函数，因为会改变this的指向
    2.生命周期  创建 更新 销毁

三、自定义指令
    自定义指令提供一种机制将数据变化映射为DOM行为
    全局   
        <div v-my-directive="val"></div>
            Vue.directive('my-directive',{
                //一共有5个钩子
                bind:function(){
                    //只调用一次
                    //准备工作
                    //比如 添加时间处理器，或只需要运行一次的高耗任务
                },
                update:function(nVal,oVal){
                    //值更新时会触发
                    //也会以初始值为参数调用一次
                },
                unbind:function(){
                    //只调用一次
                    //清理工作
                    //比如 删除bind()添加的事件监听器
                }
           })
        指令的参数可以是动态的，例如，v-my-directive:[argument]="value",argument可以是动态的
        对象字面量  
            <div v-demo="{color:'red',txt:'hello'}"></div>
            Vue.directive('demo',function(el,binding){
                //binding.value.color
                //binding.value.txt
            })
    局部   用组件的directives选项注册